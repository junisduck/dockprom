version: '2.1'

networks:
  monitor-net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.33.0.1/24

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    user: "0:0"
    volumes:
      - ./prometheus:/etc/prometheus
      - /data/docker/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.5.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  blackbox:
    image: bitnami/blackbox-exporter:latest
    container_name: blackbox_exporter
    restart: unless-stopped
    volumes:
      - ./blackbox:/etc/blackbox
    command:
      - "--config.file=/etc/blackbox/blackbox.yml"
      #command:
      #  - "--config.file=/opt/bitnami/blackbox-exporter/blackbox.yml"
    expose: 
      - 9115
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  mariadb:
    image: 'bitnami/mariadb:latest'
    container_name: maria
    volumes:
      - ./mariadb/custom.cnf:/mariadb/conf/custom.cnf:ro
      - ./mariadb/create.sql:/docker-entrypoint-initdb.d/create.sql
      #      - ./mariadb/custom.cnf:/opt/bitnami/mariadb/conf/custom.cnf:ro
      #      - ./mariadb/create.sql:/opt/bitnami/mariadb/docker-entrypoint-initdb.d/
    environment:
      # - ALLOW_EMPTY_PASSWORD=yes # 빈 암호 허용 // 테스트 또는 개발 목적
      - MARIADB_HOST=maria
      - MARIADB_PORT=3306
      - MARIADB_USER=url
      - MARIADB_PASSWORD=wnsgmldi1
      - MARIADB_ROOT_USER=root
      - MARIADB_ROOT_PASSWORD=wnsgmldi1
      # - MARIADB_ROOT_DATABASE=url
    restart: unless-stopped
    expose:
      - 3306
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
        #  python:
        #    image: python_custom:v0.1
        #    container_name: web_python
        #    volumes:
        #      - ./python:/root/
        #    restart: unless-stopped
        #    entrypoint: /bin/bash -c "tail -f /dev/null"
        #    #command: sleep infinity
        #    expose:
        #      - 3333
        #    networks:
        #      - monitor-net
        #    labels:
        #      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /data/docker/:/var/lib/docker:ro
        #- /var/lib/docker/:/var/lib/docker:ro
        #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    #image: grafana/grafana:8.0.0 # 2022-12-07 16:38 add # (tag)
    # 2022-12-07 16:38 version change (version update)
    #image: grafana/grafana:9.3.2
    image: grafana/grafana:main
    container_name: grafana
    # diectory 변경시 추가 필요함
    user: '0'
    volumes:
      # diectory를 만들주지 않으면 permission error 발생, 따라서 /data/docker/grafana_data를 만들어주거나 /data/docker까지 설정하기
      - /data/docker:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_RENDERING_SERVER_URL=http://rrenderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS:rendering:debug
      - GF_SERVER_DOMAIN=101.202.100.173
      # googoel SMTP
      #- GF_SMTP_ENABLED=true
      #- GF_SMTP_HOST=smtp.gmail.com:587
      #- GF_SMTP_USER=@gmail.com
      #- GF_SMTP_PASSWORD=${2-Step Verification value}
      #- GF_SMTP_FROM_ADDRESS=@gmail.com
      #- GF_SMTP_SKIP_VERIFY=true
      #- GF_SMTP_HOSTNAME=dreamline
      #
      # private SMTP
      #- GF_SMTP_ENABLED=true
      #- GF_SMTP_HOST=${smtp domain or ip:port}
      #- GF_SMTP_FROM_ADDRESS=
      #- GF_SMTP_FROM_NAME=
      #- GF_SKIP_VERIFY=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  renderer:
    # 2022-12-07 16:42 version update (always latest)
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    expose:
      - 8081
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.5.1
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

        #  awsapi:
        #    image: python:latest
        #    container_name: awsapi
        #    restart: unless-stopped
        #    working_dir: /sendsms
        #    volumes:
        #      - "./prometheus/sendsms:/sendsms"
        #    command: bash -c "pip install -r requirements.txt && python sendsms.py"
        #    expose:
        #      - 5000
        #    networks:
        #      - monitor-net
        #    labels:
        #      org.label-schema.group: "monitoring"


  caddy:
    image: caddy:2.6.2
    #latest 2022-12-07 16:37 version update
    #image: caddy:2.6.0
    container_name: caddy
    ports:
      - "3000:3000"
      - "3306:3306"
      - "3333:3333"
      - "5000:5000"
      - "8081:8081"
      - "8080:8080"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
      - "9115:9115"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
